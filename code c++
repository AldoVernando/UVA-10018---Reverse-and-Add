#include<stdio.h>
#include<math.h>

unsigned long long extractDigit(unsigned long long num,unsigned long long pos){
	
	unsigned long long val , res1 , res2;
	
	res1 = pow(10, pos+1);
    
    val = num % res1;

    if (pos > 0)
    {
        res2 = pow(10, pos);
        val = val / res2;
    }

    return val;
	
}

int main(){
	
	int input;
	
	scanf("%d",&input);
	
	for(int i=0;i<input;i++){
		
		unsigned long long num;
		
		scanf("%llu",&num);
		
		unsigned long long temp;
		int digit;
		int sum = 0;
		
		bool palindrom = false;
		
		while(!palindrom){
			
			temp = num;
			
			digit = 0;
			while(temp != 0){
				temp = temp / 10;
				digit++;
			}
      
				unsigned long long pal = 0;
				unsigned long long count = 1;
				
				for(int i=digit-1;i>=0;i--){
					pal += extractDigit(num,i) * count;
					count *= 10;
				}
				
				num += pal;
				sum++;
			
			temp = num;
			
			digit = 0;
			while(temp != 0){
				temp = temp / 10;
				digit++;
			}
			
			for(int i=0;i<digit/2;i++){
				
				if(digit == 1){
					palindrom = true;
					break;	
				}
				
				if(digit%2 != 0 && i == (digit/2)){
					break;
				}
				else if(extractDigit(num,i) != extractDigit(num,digit-i-1)){
					palindrom = false;
					break;
				}
				else{
					palindrom = true;
				}
			} 
			
		}
		
		printf("%d %llu\n",sum,num);
		
	}
	
	
	return 0;
}
